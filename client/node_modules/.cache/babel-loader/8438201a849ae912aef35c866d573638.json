{"ast":null,"code":"import _regeneratorRuntime from \"/home/jatobrun/Documents/Developer/proyectos/capstone/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jatobrun/Documents/Developer/proyectos/capstone/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiEndpoint } from '../config';\nimport Axios from 'axios';\nexport function getMyPosts(_x) {\n  return _getMyPosts.apply(this, arguments);\n}\n\nfunction _getMyPosts() {\n  _getMyPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(idToken) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Fetching Posts');\n            _context.next = 3;\n            return Axios.get(\"\".concat(apiEndpoint, \"/my-posts\"), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 3:\n            response = _context.sent;\n            console.log('Posts:', response.data);\n            return _context.abrupt(\"return\", response.data.items);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getMyPosts.apply(this, arguments);\n}\n\nexport function getAllPosts(_x2) {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(idToken) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Fetching Posts');\n            _context2.next = 3;\n            return Axios.get(\"\".concat(apiEndpoint, \"/posts\"), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 3:\n            response = _context2.sent;\n            console.log('Posts:', response.data);\n            return _context2.abrupt(\"return\", response.data.items);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function createPost(_x3, _x4) {\n  return _createPost.apply(this, arguments);\n}\n\nfunction _createPost() {\n  _createPost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(idToken, newPost) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Axios.post(\"\".concat(apiEndpoint, \"/posts\"), JSON.stringify(newPost), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data.item);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createPost.apply(this, arguments);\n}\n\nexport function patchPost(_x5, _x6, _x7) {\n  return _patchPost.apply(this, arguments);\n}\n\nfunction _patchPost() {\n  _patchPost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(idToken, PostId, updatedPost) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Axios.patch(\"\".concat(apiEndpoint, \"/posts/\").concat(PostId), JSON.stringify(updatedPost), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _patchPost.apply(this, arguments);\n}\n\nexport function deletePost(_x8, _x9) {\n  return _deletePost.apply(this, arguments);\n}\n\nfunction _deletePost() {\n  _deletePost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(idToken, PostId) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Axios.delete(\"\".concat(apiEndpoint, \"/posts/\").concat(PostId), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _deletePost.apply(this, arguments);\n}\n\nexport function getUploadUrl(_x10, _x11) {\n  return _getUploadUrl.apply(this, arguments);\n}\n\nfunction _getUploadUrl() {\n  _getUploadUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(idToken, PostId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Axios.post(\"\".concat(apiEndpoint, \"/posts/\").concat(PostId, \"/attachment\"), '', {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response.data.uploadUrl);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getUploadUrl.apply(this, arguments);\n}\n\nexport function uploadFile(_x12, _x13) {\n  return _uploadFile.apply(this, arguments);\n}\n\nfunction _uploadFile() {\n  _uploadFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(uploadUrl, file) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Axios.put(uploadUrl, file);\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _uploadFile.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/jatobrun/Documents/Developer/proyectos/capstone/client/src/api/post-api.ts"],"names":["apiEndpoint","Axios","getMyPosts","idToken","console","log","get","headers","response","data","items","getAllPosts","createPost","newPost","post","JSON","stringify","item","patchPost","PostId","updatedPost","patch","deletePost","delete","getUploadUrl","uploadUrl","uploadFile","file","put"],"mappings":"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","sourcesContent":["import { apiEndpoint } from '../config'\nimport { Post } from '../types/Post';\nimport { CreatePostRequest } from '../types/CreatePostRequest';\nimport Axios from 'axios'\nimport { UpdatePostRequest } from '../types/UpdatePostRequest';\n\nexport async function getMyPosts(idToken: string): Promise<Post[]> {\n  console.log('Fetching Posts')\n\n  const response = await Axios.get(`${apiEndpoint}/my-posts`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Posts:', response.data)\n  return response.data.items\n}\nexport async function getAllPosts(idToken: string): Promise<Post[]> {\n  console.log('Fetching Posts')\n\n  const response = await Axios.get(`${apiEndpoint}/posts`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Posts:', response.data)\n  return response.data.items\n}\n\nexport async function createPost(\n  idToken: string,\n  newPost: CreatePostRequest\n): Promise<Post> {\n  const response = await Axios.post(`${apiEndpoint}/posts`,  JSON.stringify(newPost), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchPost(\n  idToken: string,\n  PostId: string,\n  updatedPost: UpdatePostRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/posts/${PostId}`, JSON.stringify(updatedPost), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function deletePost(\n  idToken: string,\n  PostId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/posts/${PostId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  PostId: string\n): Promise<string> {\n  const response = await Axios.post(`${apiEndpoint}/posts/${PostId}/attachment`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await Axios.put(uploadUrl, file)\n}\n"]},"metadata":{},"sourceType":"module"}